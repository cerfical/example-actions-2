on:
    push:
        branches:
            - main

permissions:
    issues: write
    contents: write
    pull-requests: write

name: release-please

jobs:
    release-please:
        name: Release Please
        runs-on: ubuntu-latest
        outputs:
            release-created: ${{ steps.release.outputs.release_created }}
            tag-name: ${{ steps.release.outputs.tag_name  }}

        steps:
            - uses: googleapis/release-please-action@v4
              id: release
              with:
                  release-type: go
            - name: "Check if release created"
              if: ${{ steps.release.outputs.release_created }}
              run: |
                  echo "Release was created!"
                  echo "Release tag name is ${{ steps.release.outputs.tag_name }}"
            - name: "Check if release created"
              if: ${{ !steps.release.outputs.release_created }}
              run: |
                  echo "Release was not created!"
                  echo "Release tag name is ${{ steps.release.outputs.tag_name }}"

    build:
        name: Build for ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        needs: release-please
        if: ${{ needs.release-please.outputs.release-created }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod

            - name: Install dependencies
              run: go mod download

            - name: Build
              shell: bash
              run: |
                  arch=$(go env GOARCH)
                  system=$(go env GOOS)
                  platform=${arch}-${system}

                  echo "Building for ${platform}"

                  mkdir build && cd build
                  for cmd in ../cmd/*/; do
                      cmd_name=$(basename "$cmd")
                      echo "Building ${cmd_name}"

                      go build ${cmd}
                  done
                  cd ..

                  mkdir dist

                  output_file="./dist/app-${platform}"
                  case "$system" in
                  *win*)
                      7z a "${output_file}.zip" ./build/*
                      ;;
                  *linux*)
                      cd build && tar -vczf "../${output_file}.tar.gz" * && cd -
                      ;;
                  *)
                      echo "Unknown platform: ${platform}"
                      exit 1
                      ;;
                  esac

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-${{ matrix.os }}
                  path: build/**/*

            - name: Upload release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ needs.release-please.outputs.tag-name }}
                  files: ./dist/**/*
