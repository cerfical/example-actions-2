name: Release
on: [push, workflow_dispatch]

jobs:
    release-please:
        name: Release Please
        runs-on: ubuntu-latest

        permissions:
            pull-requests: write

        outputs:
            release-created: ${{ steps.release.outputs.release_created }}
            tag-name: ${{ steps.release.outputs.tag_name  }}

        steps:
            - uses: googleapis/release-please-action@v4
              id: release
              with:
                  release-type: go

    build:
        name: Build for ${{ matrix.os }}
        if: ${{ needs.release-please.outputs.release-created }}
        needs: release-please
        runs-on: ${{ matrix.os }}

        permissions:
            contents: read

        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod

            - name: Download dependencies
              run: go mod download

            - name: Build and archive
              shell: bash
              run: |
                  arch=$(go env GOARCH)
                  system=$(go env GOOS)
                  platform=${arch}-${system}

                  echo "Building for ${platform}"

                  mkdir build && cd build
                  for cmd in ../cmd/*/; do
                      cmd_name=$(basename "$cmd")
                      echo Building ${cmd_name}

                      # Let go build decide on executable name and extension
                      go build ${cmd}
                  done
                  cd ..

                  mkdir dist

                  output_file="app-${platform}"
                  case "$system" in
                  *win*)
                      echo Creating ${output_file}.zip
                      7z a "./dist/${output_file}.zip" ./build/*
                      ;;
                  *linux*)
                      echo Creating ${output_file}.tar.gz
                      cd build && tar -vczf "../dist/${output_file}.tar.gz" *
                      ;;
                  *)
                      echo Unknown platform: ${platform}
                      exit 1
                      ;;
                  esac

            - name: Upload release
              env:
                  GH_TOKEN: ${{ github.token }}
              run: gh release upload ${{ needs.release-please.outputs.tag-name }} ./dist/*
